#BlueJ class context
comment0.target=BST
comment1.params=
comment1.target=BST()
comment10.params=
comment10.target=void\ inOrder()
comment11.params=
comment11.target=void\ postOrder()
comment12.params=
comment12.target=void\ preOrder()
comment13.params=
comment13.target=void\ levelOrder()
comment14.params=
comment14.target=BST.BSTNode\ inOrderReturn()
comment15.params=
comment15.target=void\ inOrderPrint()
comment16.params=
comment16.target=void\ inOrderReverse()
comment17.params=bst
comment17.target=void\ deleteStops(BST)
comment18.params=bst\ check
comment18.target=void\ loadBST(BST,\ int)
comment19.params=n
comment19.target=void\ deleteNode(BST.BSTNode)
comment19.text=Private\ methods.
comment2.params=d
comment2.target=java.lang.Comparable\ find(java.lang.Comparable)
comment2.text=\ Return\ true\ if\ element\ d\ is\ present\ in\ the\ tree.\ \r\n
comment20.params=r\ n
comment20.target=BST.BSTNode\ deleteNode(BST.BSTNode,\ BST.BSTNode)
comment21.params=r
comment21.target=BST.BSTNode\ inOrderOne(BST.BSTNode)
comment22.params=d\ r
comment22.target=java.lang.Comparable\ find(java.lang.Comparable,\ BST.BSTNode)
comment23.params=d
comment23.target=void\ add(java.lang.Comparable)
comment23.text=Add\ element\ d\ to\ the\ tree.
comment24.params=n
comment24.target=void\ addByFreq(BST.BSTNode)
comment25.params=n
comment25.target=void\ addByLength(BST.BSTNode)
comment26.params=r\ n
comment26.target=void\ add(BST.BSTNode,\ BST.BSTNode)
comment26.text=Do\ the\ actual\ add\ of\ node\ r\ to\ tree\ rooted\ at\ n
comment27.params=r\ n
comment27.target=void\ addByFreq(BST.BSTNode,\ BST.BSTNode)
comment28.params=r\ n
comment28.target=void\ addByLength(BST.BSTNode,\ BST.BSTNode)
comment29.params=r
comment29.target=int\ height(BST.BSTNode)
comment29.text=Implement\ a\ height\ method.
comment3.params=
comment3.target=int\ height()
comment3.text=\ Return\ the\ height\ of\ the\ tree.\ \r\n
comment30.params=r\ travType
comment30.target=void\ traverse(BST.BSTNode,\ int)
comment30.text=Traverse\ the\ tree.\ \ travtype\ determines\ the\ type\ of\ traversal\ to\ perform.
comment31.params=r
comment31.target=void\ visit(BST.BSTNode)
comment32.params=r
comment32.target=void\ levelOrder(BST.BSTNode)
comment33.params=r
comment33.target=void\ visitPrint(BST.BSTNode)
comment34.params=r\ travType
comment34.target=BST.BSTNode\ traverseReturn(BST.BSTNode,\ int)
comment35.params=r
comment35.target=BST.BSTNode\ visitReturn(BST.BSTNode)
comment4.params=
comment4.target=int\ optimalHeight()
comment5.params=
comment5.target=int\ size()
comment5.text=\ Return\ the\ number\ of\ nodes\ in\ the\ tree.\ \r\n
comment6.params=
comment6.target=int\ totalWord()
comment7.params=
comment7.target=int\ stopWord()
comment8.params=
comment8.target=int\ avgLen()
comment9.params=
comment9.target=int\ maxLen()
numComments=36
